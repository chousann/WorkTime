name: deploy_to_githubActions_with_ngrok
on:
  push:
    branches:
      - deploy_to_githubActions_with_ngrok
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      
      # Install node js
      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install required dependencies to build app
      - name: Install dependencies
        run: |
          npm ci
          npx ng serve --host 0.0.0.0 --disableHostCheck &
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo su
          wget -q https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip
          unzip ngrok-stable-linux-386.zip
          chmod +x ./ngrok
          ./ngrok authtoken ${{ secrets.NGROK_TOKEN }}
          ./ngrok http 4200 -log=ngrok.log &
          sleep 10
          touch /tmp/keepalive
          cat ngrok.log
          
      - name: Setup Debug
        uses: csexton/debugger-action@master
